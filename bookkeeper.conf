journalDirectory=/journal

# Accepts multiple directories
ledgerDirectories=/ledgers

# Can be the same as ledgerDirectories
indexDirectories=/indexes

bookiePort=3181

# Register bookie to Zookeeper by hostname instead of IP
useHostNameAsBookieID=true

# All local clients directly from JVM
enableLocalTransport=true

# Retain status across restarts
persistBookieStatusEnabled=true

# Admin server. Disable for production
httpServerEnable=true
httpServerPort=8080

# If false, journal writes are written to the OS page cache but not flushed to disk until acknowledged. Can improve performance. Would theoretically only cause loss in event of a power failure or kernel panic 
journalSyncData=false

# double check if a ledger exists in metadata service prior to gc. Should really only cause a performance hit if Zookeepers are overloaded but provides some small level of assurance that the GC won't reap data that it erroneously believes is safe in Zookeeper
verifyMetadataOnGC=true

# Where to find the zookeeper service at. Use this instead of a list of zkServers and point it to a single host that represents the service such as a load balancer or multiple entry DNS records. For Zookeeper in kube this should be the DNS entry for the Zookeeper service (Not the headless service)
metadataServiceUri=zk+hierarchical://zklocal-svc.default.svc.cluster.local:2181/bookkeeper/ledgers


# Settings for stat scraping
enableStatistics=true
statsProviderClass=org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
limitStatsLogging=false
prometheusStatsHttpPort=7070

# Whether to allow bookie to start autorecovery daemon
autoRecoveryDaemonEnabled=true
